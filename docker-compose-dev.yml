networks:
  soundbind-network:

services:
  config-server:
    build:
      context: .
      dockerfile: config-server/Dockerfile
    image: soundbind/config-server:latest
    container_name: soundbind-config-server
    ports:
      - 8888:8888
    environment:
      - spring.cloud.config.server.git.host-key=${CONFIG_SERVER_HOST_KEY}
      - spring.cloud.config.server.git.private-key=${CONFIG_SERVER_PRIVATE_KEY}
    restart: always
    networks:
      - soundbind-network

  eureka-server:
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    image: soundbind/eureka-server:latest
    container_name: soundbind-eureka-server
    ports:
      - 8761:8761
    environment:
      - PROFILES_ACTIVE=dev
      - SERVER_PORT=8761
      - CONFIG_PROFILE=dev
    depends_on:
      - config-server
    restart: always
    networks:
      - soundbind-network

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    image: soundbind/api-gateway:latest
    container_name: soundbind-api-gateway
    ports:
      - 8000:8000
    environment:
      - PROFILES_ACTIVE=dev
      - SERVER_PORT=8000
      - CONFIG_PROFILE=dev
    depends_on:
      - eureka-server
      - config-server
    restart: always
    networks:
      - soundbind-network

  kafka-server:
    build:
      context: .
      dockerfile: kafka-server/Dockerfile
    image: soundbind/kafka-server:latest
    container_name: soundbind-kafka-server
    ports:
      - 9000:9000
    environment:
      - PROFILES_ACTIVE=dev
      - SERVER_PORT=9000
      - CONFIG_PROFILE=dev
    depends_on:
      - eureka-server
      - config-server
      - api-gateway
      - zookeeper
      - kafka-1
      - kafka-2
      - kafka-3
    restart: always
    networks:
      - soundbind-network

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    image: soundbind/auth-service:latest
    container_name: soundbind-auth-service
    ports:
      - 8090:8090
    environment:
      - PROFILES_ACTIVE=dev
      - SERVER_PORT=8090
      - CONFIG_PROFILE=dev,jwt,kafka,mail,oauth,redis
    depends_on:
      - eureka-server
      - config-server
      - api-gateway
      - kafka-server
      - mysql
      - redis
    restart: always
    networks:
      - soundbind-network

  music-service:
    build:
      context: .
      dockerfile: music-service/Dockerfile
    image: soundbind/music-service:latest
    container_name: soundbind-music-service
    ports:
      - 8070:8070
    environment:
      - PROFILES_ACTIVE=dev
      - SERVER_PORT=8070
      - CONFIG_PROFILE=dev,es,file,kafka,redis
    depends_on:
      - eureka-server
      - config-server
      - api-gateway
      - kafka-server
      - mysql
      - redis
      - elasticsearch
    restart: always
    networks:
      - soundbind-network

  review-service:
    build:
      context: .
      dockerfile: review-service/Dockerfile
    image: soundbind/review-service:latest
    container_name: soundbind-review-service
    ports:
      - 8060:8060
    environment:
      - PROFILES_ACTIVE=dev
      - SERVER_PORT=8060
      - CONFIG_PROFILE=dev,es,kafka,redis
    depends_on:
      - eureka-server
      - config-server
      - api-gateway
      - kafka-server
      - mysql
      - redis
      - elasticsearch
    restart: always
    networks:
      - soundbind-network

  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    image: soundbind/notification-service:latest
    container_name: soundbind-notification-service
    ports:
      - 8040:8040
    environment:
      - PROFILES_ACTIVE=dev
      - SERVER_PORT=8040
      - CONFIG_PROFILE=dev,kafka
    depends_on:
      - eureka-server
      - config-server
      - api-gateway
      - kafka-server
      - mongodb
    restart: always
    networks:
      - soundbind-network

  mysql:
    image: soundbind/mysql:latest
    container_name: soundbind-mysql
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_DB_PASSWORD}
      - TZ=Asia/Seoul
    volumes:
      - ./db/mysql/data:/var/lib/mysql
      - ./db/mysql/init:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      - soundbind-network

  mongodb:
    image: soundbind/mongodb:latest
    container_name: soundbind-mongodb
    ports:
      - 27017:27017
    volumes:
      - ./db/mongodb/data:/data/db
    restart: always
    networks:
      - soundbind-network

  redis:
    image: soundbind/redis:latest
    container_name: soundbind-redis
    ports:
      - 6379:6379
    volumes:
      - ./db/redis/data:/data
      - ./db/redis/conf/redis.conf:/usr/local/conf/redis.conf
    command: redis-server /usr/local/conf/redis.conf
    restart: always
    networks:
      - soundbind-network

  elasticsearch:
    image: soundbind/elasticsearch:latest
    container_name: soundbind-elasticsearch
    ports:
      - 19200:9200
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./db/es/data:/usr/share/elasticsearch/data
    restart: always
    networks:
      - soundbind-network

  zookeeper:
    image: soundbind/zookeeper:latest
    ports:
      - 22181:2181
    restart: always
    networks:
      - soundbind-network

  kafka-1:
    image: soundbind/kafka:latest
    ports:
      - 29091:9091
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9091
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    restart: always
    networks:
      - soundbind-network

  kafka-2:
    image: soundbind/kafka:latest
    ports:
      - 29092:9092
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    restart: always
    networks:
      - soundbind-network

  kafka-3:
    image: soundbind/kafka:latest
    ports:
      - 29093:9093
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-3:9093
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    restart: always
    networks:
      - soundbind-network